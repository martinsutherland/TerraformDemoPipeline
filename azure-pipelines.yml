trigger:
  - main

resources:
  - repo: self

variables:
  dockerRegistryServiceConnection: "70193de8-17c3-4d45-aed9-7b6d459cb210"
  imageRepository: "martinsutherlandazurepipelinedemo"
  containerRegistry: "customersapp.azurecr.io"
  dockerfilePath: "$(Build.SourcesDirectory)/Dockerfile"
  tag: "$(Build.BuildId)"
  appName: "Azure-test-App-Two"
  azureSubscription: "Azure subscription 1 (12d4a125-7d4d-45ad-8101-2ba4e5ce1593)"
  vmImageName: "ubuntu-latest"
  uiSource: "/src"

stages:

- stage: Terraform Install
  displayName: TerraformInstall
  jobs:
    - job: TerraformInstall
      displayName: TerraformInstall
      steps:
        - task: TerraformInstaller@1
          inputs:
            terraformVersion: 'latest'
            downloadUrl: 'https://releases.hashicorp.com/terraform'

- stage: Terraform Run
  displayName: TerraformRun
  jobs:
    - job: TerraformRun
      displayName: TerraformRun
      steps:
        - task: TerraformCLI@1
          inputs:
            command: 'init'
            allowTelemetryCollection: true

- stage: Terraform Apply
  displayName: TerraformApply
  jobs:
    - job: TerraformApply
      displayName: TerraformApply
      steps:
        - task: TerraformCLI@1
          inputs:
            command: 'apply'
            runAzLogin: true
            allowTelemetryCollection: true

- stage: Build
  displayName: Build stage
  jobs:
    - job: Build
      displayName: Build
      pool:
        vmImage: $(vmImageName)
      steps:
        - task: Docker@2
          displayName: Push stage
          inputs:
            command: buildAndPush
            repository: $(imageRepository)
            dockerfile: $(dockerfilePath)
            containerRegistry: $(dockerRegistryServiceConnection)
            tags: |
              $(tag)

- stage: Deploy
  displayName: Deploy
  jobs:
    - job: Deploy
      displayName: Deploy
      steps:
        - task: AzureWebAppContainer@1
          displayName: "Deploy stage"
          inputs:
            azureSubscription: $(azureSubscription)
            appName: $(appName)
            imageName: $(containerRegistry)/$(imageRepository):$(tag)
